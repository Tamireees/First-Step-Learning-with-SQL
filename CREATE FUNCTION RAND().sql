
SELECT RAND()

-- VALOR MINIMO 100
-- VALOR MAXIMO 500
SELECT ROUND(((500 - 100 - 1) * RAND() +100), 0)

SELECT ROUND(((1000 - 100 - 1) * RAND() +100), 0)


CREATE FUNCTION NumeroAleatorio (@VAL_MIN INT, @VAL_MAX INT)
RETURNS INT
AS
BEGIN
	DECLARE @ALEATORIO INT
	DECLARE @VALOR_ALEATORIO FLOAT
	SELECT @VALOR_ALEATORIO = RAND()

	SET @ALEATORIO = ROUND(((@VAL_MAX - @VAL_MIN - 1) * @VALOR_ALEATORIO + @VAL_MIN), 0)
	RETURN @ALEATORIO
	END;




	CREATE VIEW VW_ALEATORIO AS SELECT RAND() AS VALOR_ALEATORIO

	SELECT * FROM VW_ALEATORIO




	CREATE FUNCTION NumeroAleatorio (@VAL_MIN INT, @VAL_MAX INT)
RETURNS INT
AS
BEGIN
	DECLARE @ALEATORIO INT
	DECLARE @VALOR_ALEATORIO FLOAT
	SELECT @VALOR_ALEATORIO = VALOR_ALEATORIO FROM VW_ALEATORIO

	SET @ALEATORIO = ROUND(((@VAL_MAX - @VAL_MIN - 1) * @VALOR_ALEATORIO + @VAL_MIN), 0)
	RETURN @ALEATORIO
	END;


	SELECT dbo.[NumeroAleatorio](1,10)

	--______________________________________________________________
	--DESAFIO
--	Em seguida, faça uma função UDF que retorne o faturamento total de todas as notas fiscais de um bairro.

--Exemplo: Se eu seleciono como parâmetro da função o bairro jardins, o retorno da função será o total de faturamento de 
--todas as notas fiscais, para todos os períodos, para este bairro.

SELECT SUM(INF.QUANTIDADE * INF.[PREÇO]) AS FATURAMENTO
FROM [ITENS NOTAS FISCAIS] INF
INNER JOIN [NOTAS FISCAIS] NF
ON INF.NUMERO = NF.NUMERO
INNER JOIN [TABELA DE CLIENTES] TC
ON TC.CPF = NF.CPF
WHERE TC.BAIRRO = 'Jardins'

CREATE FUNCTION FaturamentoBairro (@BAIRRO VARCHAR(50))
RETURNS FLOAT
AS
BEGIN
   DECLARE @FATURAMENTO FLOAT
   SELECT @FATURAMENTO = SUM(INF.QUANTIDADE * INF.[PREÇO]) 
   FROM [ITENS NOTAS FISCAIS] INF
   INNER JOIN [NOTAS FISCAIS] NF
   ON INF.NUMERO = NF.NUMERO
   INNER JOIN [TABELA DE CLIENTES] TC
   ON TC.CPF = NF.CPF
   WHERE TC.BAIRRO = @BAIRRO
   RETURN @FATURAMENTO
END;

SELECT BAIRRO, dbo.[FaturamentoBairro](BAIRRO) AS FATURAMENTO
FROM [dbo].[TABELA DE CLIENTES] 
